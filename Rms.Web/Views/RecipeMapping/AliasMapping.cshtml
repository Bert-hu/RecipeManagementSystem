
@{

}
<style>
    .scrollable-div {
        max-height: 80vh;
        overflow-y: auto; /* 或者使用 overflow-y: auto; */
    }

    .selected {
        background-color: #89cff0 !important;
    }
</style>
<script src="~/Scripts/layui/xm-select.js"></script>
@*<script src="~/Scripts/layui/layui.table.formdate.js"></script>*@


<div class="layui-row layui-col-space10" style=" margin-bottom: 50px">
    <div id="equipmentTypes" class="xm-select-demo"></div>
    <table class="layui-hide" id="recipeAliasTable" lay-filter="recipeAliasTable"></table>
</div>


<script type="text/html" id="addnewgroup">
    <div>
        <div class="layui-btn-container" style="float:left;display:inline">
            <button class="layui-btn layui-btn-sm" lay-event="modify">Modify</button>
            <button class="layui-btn layui-btn-sm" lay-event="delete">Delete</button>
        </div>

    </div>
</script>

<script type="text/html" id="equipmentTypeHeaderToolbar">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="add">Add</button>
    </div>
</script>



<script type="text/html" id="equipmentTypeToolbar">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="modify">Modify</button>
        <button class="layui-btn layui-btn-sm" lay-event="delete">Delete</button>
    </div>
</script>


<script type="text/html" id="equipmentTypeToolbar">
    <table class="layui-hide" id="recipeAliasList" lay-filter="recipeAliasList"></table>

</script>

<script>
    layui.use(['layer', 'table', 'form', 'upload', 'element', 'jquery', 'flow'], function () {
        var layer = layui.layer
            , table = layui.table
            , form = layui.form
            , upload = layui.upload
            , element = layui.element
            , $ = layui.jquery
            , flow = layui.flow;

        var equipmentTypeSel = xmSelect.render({
            el: '#equipmentTypes',
            radio: true,
            clickClose: true,
            filterable: true,
            //model: {
            //    icon: 'hidden',
            //    label: {
            //        type: 'text'
            //    }
            //},
            tips: '请选择设备',
            block: {
                //最大显示数量, 0:不限制
                showCount: 0,
                //是否显示删除图标
                showIcon: true,
            },
            on: function (data) {
                //arr:  当前多选已选中的数据
                var arr = data.arr;
                //change, 此次选择变化的数据,数组
                var change = data.change;
                //isAdd, 此次操作是新增还是删除
                var isAdd = data.isAdd;

                currentType = arr[0].value;
                ShowRecipeAliasTable();
            },

        })



        Initialization();
        var currentType;

        async function Initialization() {
            try {
                let result1 = await $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../RecipeMapping/GetEquipmentType',//'../RecipeMapping/GetLines',
                    data: {

                    },
                    success: function (data) {
               
                        var seldata = data.map((item, index) => ({
                            name: item.PROCESS + '---' + item.VENDOR + '---' + item.NAME,
                            value: item,
                            selected: index === 0
                        }));

                        equipmentTypeSel.update({
                            data: seldata
                        });
                        equipmentTypeSel.setValue([seldata[0]]);

                        currentType = data[0];
                        ShowRecipeAliasTable();
                    },
                    error: function () {
                    }
                });
            } catch (error) {
                //处理错误
            }
        }


        function ShowRecipeAliasTable() {
            window.recipegrouptable = table.render({
                elem: '#recipeAliasTable'
                , url: '../RecipeMapping/GetRecipeAlias'
                , toolbar: '#equipmentTypeHeaderToolbar'
                , id: "recipeAliasTable"
                , limit: 1000
                , limits: [1000]
                , height: 'full-235'
                , cols: [[
                    { field: 'RECIPE_NAME', width: '25%', title: 'Recipe Name', sort: true },
                    { field: 'RECIPE_ALIAS', width: '60%', title: 'Recipe Alias', sort: true },
                    { fixed: 'right', width: '15%', align: 'center', toolbar: '#equipmentTypeToolbar' }
                ]],
                where: {
                    equipmentType: currentType.ID
                }

            });

        }


        table.on('tool(recipeAliasTable)', function (obj) {
            var event = obj.event, //当前单元格事件属性值
                selectdata = obj.data;
            console.log(selectdata);
            if (event === 'delete') {
                layer.confirm('Delete Config?', { icon: 3 }, function () {
                    //$.post('../AlarmConfig/DeleteConfig', { configId: selectdata.ID }, function (res) {
                    //    // 处理响应数据
                    //    console.log(res);
                    //    if (res.result) {
                    //        window.configTable.reload();
                    //        layer.msg("OK", { icon: 1 });
                    //    } else {
                    //        layer.msg(res.message);
                    //    }
                    //});

                }, function () {
                });

            }
            else if (event === 'edit') {
                //layer.open({
                //    type: 2,
                //    content: 'AddConfig?equipmentTypeId=' + selectdata.EQUIPMENT_TYPE_ID + '&configId=' + selectdata.ID,
                //    title: 'Edit Config',
                //    area: ['60%', '45%'],
                //    success: function (layero, index) {
                //        ////向layer页面传值，传值主要代码
                //        //var body = layer.getChildFrame('body', index);
                //        ////将弹窗页面中属性名id="xxxx"的标签赋值
                //        //body.find("[id='equipmentTypeId']").val(equipmentTypeId);
                //        //把equipmentTypeId传递给子页面
                //        var iframeWindow = layero.find('iframe')[0].contentWindow;

                //        // 直接赋值给子页面的变量
                //        //iframeWindow.equipmentTypeId = equipmentTypeId;
                //        //iframeWindow.configId = selectdata.ID;
                //    }
                //}, function (value, index, elem) {

                //});
            }
        })







    });

</script>
