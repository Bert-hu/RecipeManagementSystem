
@{
    ViewBag.Title = "Index";
}
<style>
    .scrollable-div {
        max-height: 80vh;
        overflow-y: auto; /* 或者使用 overflow-y: auto; */
    }

    .selected {
        background-color: #89cff0 !important;
    }
</style>

<script type="text/html" id="toolbar">
    <div>
        <div>
            <div class="layui-inline">
                <input class="layui-input" style="width:200px" id="searchfield" placeholder="请输入查询内容" autocomplete="off">
            </div>
            <button type="button" class="layui-btn layui-btn-sm" lay-event="search">查找</button>
        </div>
    </div>
</script>

<script type="text/html" id="configtoolbar">
    <a class="layui-btn layui-btn layui-btn-xs" lay-event="delete">删除</a>
</script>

<div class="layui-row">
    <div class="layui-col-xs4">
        <table class="layui-hide" id="markingrecipe" lay-filter="markingrecipe"></table>
    </div>
    <div class="layui-col-xs8 scrollable-div">

        <form class="layui-form" lay-filter="newitem" action="">
            <fieldset class="layui-elem-field layui-field-title">
                <legend id="lg_recipeinfo"></legend>
            </fieldset>

            <div class="layui-form-item">
                <input type="text" name="recipeid" id="recipeid" hidden>
                <div class="layui-inline">
                    <label class="layui-form-label">版本</label>
                    <div class="layui-input-block">
                        <select name="version" id="version" lay-filter="version">
                        </select>
                    </div>
                </div>
                <div class="layui-inline">
                    <button type="button" class="layui-btn layui-btn-normal" id="addversion">新增版本</button>
                </div>
                <div class="layui-inline" id="templateDiv">
                    <label class="layui-form-label">Template</label>
                    <div class="layui-input-block">
                        <select name="textselect" id="versionTemplate" lay-filter="versionTemplate">
                            <option value="Main">Main</option>
                            <option value="Backup">Backup</option>
                        </select>
                    </div>
                </div>
                <div class="layui-inline" style="float: right;">
                    <button type="button" class="layui-btn layui-btn-danger" id="submitversion">提交版本</button>
                </div>
            </div>
            <fieldset class="layui-elem-field layui-field-title">
                @*<legend id="lg_version"></legend>*@
            </fieldset>
            @*<div class="layui-form-item">
                <div class="layui-inline">
                    <label class="layui-form-label">Version Template</label>
                    <div class="layui-input-block">
                        <select name="textselect" id="versionTemplate" lay-filter="versionTemplate">
                            <option value="Main">Main</option>
                            <option value="Backup">Backup</option>     
                        </select>
                    </div>
                </div>
            </div>*@
            <div class="layui-form-item">
                <div class="layui-inline">
                    <label class="layui-form-label">Select Text</label>
                    <div class="layui-input-block">
                        <select name="textselect">
                            <option value="1">Text1</option>
                            <option value="2">Text2</option>
                            <option value="3">Text3</option>
                            <option value="4">Text4</option>
                            <option value="5">Text5</option>
                            <option value="6">Text6</option>
                            <option value="7">Text7</option>
                            <option value="8">Text8</option>
                            <option value="9">Text9</option>
                            <option value="10">Text10</option>
                        </select>
                    </div>
                </div>
                <div class="layui-inline">
                    <div class="layui-form-item">
                        <label class="layui-form-label">Type</label>
                        <div class="layui-input-block">
                            <input type="radio" name="marktype" lay-filter="marktype" value="Fixed" title="Fixed" checked="">
                            <input type="radio" name="marktype" lay-filter="marktype" value="Code" title="Code">

                        </div>
                    </div>
                </div>
            </div>
            <div class="layui-form-item">
                <label class="layui-form-label">Fixed Text</label>
                <div class="layui-input-block">
                    <input type="text" class="layui-input" id="fixedtext" name="fixedtext" lay-filter="fixedtext" lay-verify="fixedtext">
                </div>
            </div>
            <div class="layui-form-item">
                <div class="layui-inline">
                    <label class="layui-form-label">Code 字段</label>
                    <div class="layui-input-inline">
                        <select name="field" id="field" disabled>
                        </select>
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label">Start</label>
                    <div class="layui-input-inline">
                        <select name="startindex" id="startindex" lay-verify="required" disabled>
                            <option value="0">0</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                        </select>
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label">Length</label>
                    <div class="layui-input-inline">
                        <select name="length" id="length" lay-verify="required" disabled>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="layui-form-item">
                <div class="layui-input-block">
                    <button type="submit" class="layui-btn" lay-submit="" lay-filter="additem" id="additem">添加</button>
                </div>
            </div>
        </form>
        <style>
            .sample {
                padding: 2% 8% 8% 8%;
                background-color: black;
                color: white;
                height: 20vh;
                margin-top: 2%;
                margin-right: 10%;
                margin-bottom: 10%;
                margin-left: 10%;
                font-size: 1.5rem
            }
        </style>
        <div class="layui-row">
            <div class="layui-col-xs6">
                <table class="layui-hide" id="markingitem" lay-filter="markingitem"></table>
            </div>
            <div class="layui-col-xs6">
                <div class="sample">           
                  
                </div>
            </div>
        </div>




    </div>

    <script>

        layui.use(['layer', 'table', 'form', 'upload'], function () {
            var layer = layui.layer
                , table = layui.table
                , form = layui.form;

            var markingrecipe = table.render({
                elem: '#markingrecipe'
                , url: '../MarkingManage/GetMarkingRecipe'
                , page: true
                , id: "markingrecipe"
                , limit: 1000
                , limits: [1000]
                , height: 'full-150'
                , defaultToolbar: []
                , toolbar: '#toolbar'
                , cols: [[

                    { field: 'EQID', title: 'EQID', width: 100 }
                    , { field: 'EQNAME', title: '设备名', width: 100 }
                    , { field: 'RECIPENAME', title: '机种名', width: 300 }
                    , { field: 'EFFECTIVE_VERSION', title: '生效版', width: 80 }
                    , { field: 'EFFECTIVE_CREATOR', title: '创建者', width: 180 }
                    , { field: 'LATEST_VERSION', title: '最新版', width: 80 }
                    , { field: 'EFFECTIVE_CREATOR', title: '创建者', width: 180 }

                ]]
                , done: function (res, curr, count) {
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        url: '../MarkingManage/GetMarkingFields',
                        data: {
                            page: 1,
                            limit: 9999
                        },
                        success: function (data) {
                            $('#field').html('');
                            data.data.forEach(function (value, index, array) {
                                $('#field').append(new Option(value.NAME, value.NAME));

                            });
                        },
                        error: function (err) {
                            console.log(err)
                        }
                    });
                }
            });

            var markingitem = table.render({
                elem: '#markingitem'
                //, url: '../MarkingManage/GetMarkingItems'

                // , page: true
                , id: "markingitem"
                , limit: 1000
                , limits: [1000]
                , height: 'full-600'
                , defaultToolbar: []
                //, toolbar: '#toolbar'
                , cols: [[

                    { field: 'TEXTINDEX', title: 'Text', width: 70 }
                    , { field: 'TEXTORDER', title: 'Order', width: 70 }
                    , { field: 'CONTENT', title: 'Content', width: 200 }
                    , { field: 'TYPE', title: 'Type', width: 80 }
                    , { field: 'START_INDEX', title: 'Start', width: 70 }
                    , { field: 'LENGTH', title: 'Length', width: 80 }
                    , { field: 'CREATOR', title: 'CREATOR', width: 180 }
                    , { fixed: 'right', width: 50, toolbar: '#configtoolbar' }

                ]]
                , done: function (res, curr, count) {
                    console.log(res);
                    if (count > 0) {
                        ReloadPreviewDie(currentMarkingVersionId);
                    }
                }
            });
            table.on('row(markingrecipe)', function (obj) {

                var data = obj.data;//data为当前点击行的数据
                //console.log(obj);
                UpdateSubpage(data.RECIPEID);

                //标注选中样式
                obj.tr.addClass('selected').siblings().removeClass('selected');
            });



            table.on('toolbar(markingrecipe)', function (obj) {
                var id = obj.config.id;
                switch (obj.event) {
                    case 'search':
                        var filter = $("#searchfield").val();

                        table.reload('markingrecipe', {
                            url: '../MarkingManage/GetMarkingRecipe',
                            where: {
                                filter: filter,
                            }
                        });
                        $("#searchfield").val(filter);
                        break;
                }
            });

            table.on('tool(markingitem)', function (obj) { //注：tool 是工具条事件名，recipe 是 table 原始容器的属性 lay-filter="对应的值"
                var selectdata = obj.data //获得当前行数据
                    , layEvent = obj.event; //获得 lay-event 对应的值
                if (layEvent === 'delete') {
                    layer.confirm('确认删除？', {

                        btn: ['确定', '取消']
                        , yes: function (index, layero) {
                            DeleteConfigItem(selectdata);
                            layer.close(index);
                        }
                    },);
                }

            });

            form.on('radio(marktype)', function (data) {
                if (data.value === 'Code') {
                    // 选到Code时移除disabled属性
                    $('#field').attr("disabled", false).removeClass("layui-btn-disabled");
                    $('#startindex').attr("disabled", false).removeClass("layui-btn-disabled");
                    $('#length').attr("disabled", false).removeClass("layui-btn-disabled");
                    $('#fixedtext').attr("disabled", true).addClass("layui-btn-disabled");
                } else {
                    // 选到Fixed时添加disabled属性
                    $('#field').attr("disabled", true).addClass("layui-btn-disabled");;
                    $('#startindex').attr("disabled", true).addClass("layui-btn-disabled");
                    $('#length').attr("disabled", true).addClass("layui-btn-disabled");
                    $('#fixedtext').attr("disabled", false).removeClass("layui-btn-disabled");

                }
                form.render();
            });

            var currentMarkingVersionId = null;
            //版本选择
            form.on('select(version)', function (data) {
                currentMarkingVersionId = data.value;
                ReloadItemTable(currentMarkingVersionId, currentIsMainConfig);

            });
            var currentIsMainConfig = true;
            form.on('select(versionTemplate)', function (data) {

                currentIsMainConfig = data.value == 'Main';
                ReloadItemTable(currentMarkingVersionId, currentIsMainConfig);

            });

            //监听提交
            form.on('submit(additem)', function (data) {
                //layer.alert(JSON.stringify(data.field), {
                //    title: '最终的提交信息'
                //})
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../MarkingManage/AddMarkingConfig',
                    data: {
                        data: data.field,
                        isMainConfig: currentIsMainConfig
                    },
                    success: function (res) {

                        layer.msg('<em style="color:white;font-style:normal;font-weight:normal">' + res.message + '</em>');
                        if (res.result) {
                            //ReloadItemTable(data.field.version);
                            ReloadItemTable(currentMarkingVersionId, currentIsMainConfig);

                        }
                    },
                    error: function (err) {
                        console.log(err)
                    }
                });
                return false;//不刷新
            });
            //提交验证
            form.verify({
                fixedtext: function (value, item) {
                    // 获取 Type 的值
                    var marktype = $('input[name="marktype"]:checked').val();
                    // 如果 Type 为 Fixed，则验证 Fixed Text 是否为空
                    if (marktype === 'Fixed') {
                        if (!value) {
                            return 'Fixed Text 不能为空';
                        }
                    }
                }
            });

            layui.$('#addversion').on('click', function () {
                var recipeid = $("#recipeid").val();
                if (!!recipeid) {
                    layer.confirm('确认新增？', {

                        btn: ['确定', '取消']
                        , yes: function (index, layero) {
                            //TODO: Add new version
                            AddMarkingVersion(recipeid);
                            layer.close(index);
                        }
                    },);

                } else {
                    layer.msg('<em style="color:white;font-style:normal;font-weight:normal">' + '请选择机种' + '</em>');
                }

                return false;//不刷新
            });

            layui.$('#submitversion').on('click', function () {

                var versionid = $('#version').val();
                console.log(versionid);
                if (!!versionid) {
                    layer.confirm('确认提交？', {

                        btn: ['确定', '取消']
                        , yes: function (index, layero) {
                            SubmitVersion(versionid);

                            layer.close(index);
                        }
                    },);

                } else {
                    layer.msg('<em style="color:white;font-style:normal;font-weight:normal">' + '请选择版本' + '</em>');
                }

                return false;//不刷新
            });


            function UpdateSubpage(recipeid) {
                //
                currentMarkingVersionId = '';

                table.reload('markingitem', {
                    url: '',
                    data: [],
                    done: function (res, curr, count) {


                    }
                });
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../MarkingManage/GetSubpageData',
                    data: {
                        recipeid: recipeid
                    },
                    success: function (res) {
                        $("#lg_recipeinfo").html(res.eqp.ID + ' ' + res.eqp.NAME + ' ' + res.recipe.NAME);
                        $("#recipeid").val(res.recipe.ID);//更新当前记录的RECIPEID
                        $('#version').html('');
                        res.markingversions.forEach(function (value, index, array) {
                            $('#version').append(new Option(value.VERSION, value.ID));
                        });
                        if (res.markingversions.length > 0) {
                            //ReloadItemTable(res.markingversions[0].ID, true);
                            currentMarkingVersionId = res.markingversions[0].ID;
                            ReloadItemTable(currentMarkingVersionId, currentIsMainConfig);
                        }

                        form.render('select');
                    },
                    error: function (err) {
                        console.log(err)
                    }
                });

            }
            function AddMarkingVersion(recipeid) {
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../MarkingManage/AddMarkingVersion',
                    data: {
                        recipeid: recipeid
                    },
                    success: function (data) {
                        layer.msg('<em style="color:white;font-style:normal;font-weight:normal">' + data.message + '</em>');
                        if (data.result) {
                            //ReloadItemTable(markingversion);
                            UpdateSubpage(recipeid);
                        }
                    },
                    error: function (err) {
                        console.log(err)
                    }
                });

            }

            function SubmitVersion(versionid) {
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../MarkingManage/SubmitVersion',
                    data: {
                        markingversionid: versionid
                    },
                    success: function (data) {
                        layer.msg('<em style="color:white;font-style:normal;font-weight:normal">' + data.message + '</em>');
                        if (data.result) {

                            UpdateSubpage(recipeid);
                        }
                    },
                    error: function (err) {
                        console.log(err)
                    }
                });

            }
            function ReloadItemTable(markingversionid, isMainConfig) {
                table.reload('markingitem', {
                    url: '../MarkingManage/GetMarkingConfigs'
                    , where: {
                        markingversionid: currentMarkingVersionId,
                        isMainConfig: currentIsMainConfig
                    }, done: function (res, curr, count) {
                        const sampleDiv = document.querySelector('.sample');
                        sampleDiv.innerHTML = '';
                        if (res.errmsg == '') {
                            if (res.data.length > 0) {
                                ReloadPreviewDie(currentMarkingVersionId);
                            }
                        } else {
                            layer.alert(res.errmsg);
                        }

                    }

                });
            }
            function ReloadPreviewDie(markingversionid) {
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../MarkingManage/GetMarkingTexts',
                    data: {
                        markingversionid: markingversionid,
                        isMainConfig: currentIsMainConfig
                    },
                    success: function (data) {
                        //layer.msg('<em style="color:white;font-style:normal;font-weight:normal">' + data.message + '</em>');
                        if (data.result) {
                            const jsonData = data.markingtexts;
                            const sampleDiv = document.querySelector('.sample');
                            sampleDiv.innerHTML = '';
                            const keys = Object.keys(jsonData);
                            const numOfLines = keys.length > 4 ? keys.length : 4;
                            const baseFontSize = 1.5;
                            const maxHeightRem = 20;

                            const lineHeightPercent = (100 / numOfLines).toFixed(2);
                            sampleDiv.style.height = `${maxHeightRem}vh`;

                            keys.forEach((key, index) => {
                                const lineContent = jsonData[key];

                                const fontSize = `${20 / numOfLines}vh`;
                                const lineDiv = document.createElement('div');
                                lineDiv.textContent = lineContent;
                                lineDiv.style.fontSize = fontSize;

                                sampleDiv.appendChild(lineDiv);
                            });
                        }
                    },
                    error: function (err) {
                        console.log(err)
                    }
                });
            }
            function DeleteConfigItem(config) {
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../MarkingManage/DeleteMarkingConfig',
                    data: {
                        configid: config.ID,
                        isMainConfig: currentIsMainConfig
                    },
                    success: function (res) {

                        layer.msg('<em style="color:white;font-style:normal;font-weight:normal">' + res.message + '</em>');
                        if (res.result) {
                            //ReloadItemTable(config.MARKING_VERSION_ID);
                            ReloadItemTable(currentMarkingVersionId, currentIsMainConfig);
                        }
                    },
                    error: function (err) {
                        console.log(err)
                    }
                });
            }
        });
    </script>
