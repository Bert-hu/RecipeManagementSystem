@{

}
<style>
    .scrollable-div {
        max-height: 80vh;
        overflow-y: auto; /* 或者使用 overflow-y: auto; */
    }

    .selected {
        background-color: #89cff0 !important;
    }
</style>
<script src="~/Scripts/layui/xm-select.js"></script>
<script src="~/Scripts/layui/layui.table.formdate.js"></script>
<script src="~/Scripts/layui_NEW/layui.js"></script>

<form class="layui-form layui-form-pane" action="">
    <div class="layui-form-item layui-row">
        <div class="layui-row">
            <div class="layui-input-inline" style="width:15%">
                <select name="process" id="process" lay-filter="process" lay-verify="required">
                </select>
            </div>
            <div class="layui-input-inline" style="width: 80%; margin-left: 1%">
                <input type="text" lay-affix="search" lay-filter="search" lay-options="{split: true}" placeholder="Search…" class="layui-input" id="searchInput">
            </div>
        </div>
    </div>
</form>
<script type="text/html" id="toolbar">
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="permission">Access Permissions</a>
    <a class="layui-btn layui-btn-xs" lay-event="auditprocess">Approval Permissions</a>
    <a class="layui-btn layui-btn-xs" lay-event="more">More</a>
</script>
<table class="layui-hide" id="equipmenttypetable" lay-filter="equipmenttypetable"></table>

<script>

    window.currentProcess;

    layui.use(['layer', 'table', 'form', 'upload', 'element'], function () {
        var layer = layui.layer
            , table = layui.table
            , form = layui.form
            , upload = layui.upload
            , element = layui.element
            , dropdown = layui.dropdown;
        var processselect = document.getElementById("process");


        getProcess();

        form.on('select(process)', function (data) {
            window.currentProcess = data.value; // 获取选中的值
            ShowEquipmentTypeTable(window.currentProcess);
        });

        form.on('input-affix(search)', function (data) {
            var elem = data.elem; // Input box
            var value = elem.value; // Value of the input box
            if (!value) {
                layer.msg('Please enter search content');
                return elem.focus();
            };
            // Simulate search jump
            table.reload('equipmenttypetable', {
                where: {
                    searchText: value
                } // Search field
            });
        });
        $('#searchInput').on('keydown', function (event) {
            if (event.key === 'Enter') {
                // Prevent default behavior (e.g., form submission)
                event.preventDefault();
                // Get the value from the input box
                const searchValue = $(this).val();
                // Execute your search logic here
                table.reload('equipmenttypetable', {
                    where: {
                        searchText: searchValue
                    } // Search field
                });
            }
        });
        async function getProcess() {
            try {
                let result1 = await $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../EquipmentType/GetProcesses',
                    data: {
                    },
                    success: function (data) {

                        //var uniqueValues = new Set(data.eqpData.map(item => item.TYPEPROCESS));
                        //var processes = Array.from(uniqueValues);
                        // 清空processselect元素中的选项
                        processselect.innerHTML = "";
                        //添加默认选项
                        var defaultOption = document.createElement("option");
                        defaultOption.value = "";
                        defaultOption.text = "All";
                        processselect.add(defaultOption);
                        // 自动生成其他选项
                        for (var i = 0; i < data.length; i++) {
                            var option = document.createElement("option");
                            option.text = data[i];
                            processselect.add(option);
                        }
                        form.render('select');
                        ShowEquipmentTypeTable("");

                    },
                    error: function () {
                    }
                });


            } catch (error) {
                //处理错误
            }
        }




        function ShowEquipmentTypeTable(processfilter) {
            window.rcptable = table.render({
                elem: '#equipmenttypetable'
                , url: '../EquipmentType/GetEquipmentTypes'
                //, toolbar: '#addnewrcp'
                , id: "equipmenttypetable"
                , page: true
                , limit: 1000
                , limits: [1000]
                , height: 'full-235'
                , cols: [[
                    { field: 'ID', title: 'ID' }
                    , { field: 'NAME', title: 'NAME', edit: true }
                    , { field: 'PROCESS', title: 'PROCESS', edit: true }
                    , { field: 'VENDOR', title: 'Vendor', edit: true }
                    , { field: 'TYPE', title: 'Type', edit: true }
                    , { field: 'DELETEBEFOREDOWNLOAD', title: 'Delete all recipe befor download', edit: true }
                    , { field: 'ORDERSORT', title: 'Order Sort', edit: true }
                    , { field: 'GOLDEN_RECIPE_TYPE', title: 'Golden Recipe Type', edit: true }
                    , { field: 'GOLDEN_EQID', title: 'Golden Machine', edit: true }
                    , { fixed: 'right', width: 400, align: 'center', toolbar: '#toolbar' }
                ]]
                , where: {
                    processfilter: processfilter,
                    searchText: ''
                }

                , done: function (data) {

                }
            });

        }

        table.on('edit(equipmenttypetable)', function (obj) {

            layer.confirm('is not?', { icon: 3, title: '修改确认/Confirm to Edit', content: obj.value }, function (index) {
                console.log(obj);
                $.ajax({
                    url: '../EquipmentType/Edit',
                    data: {
                        "ID": obj.data.ID,
                        "value": obj.value,
                        "field": obj.field
                    },
                    type: 'POST',
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    async: false,
                    success: function (data) {
                        layer.msg(data.message);
                        ShowEquipmentTypeTable(window.currentProcess);
                    },
                    error: function (message) {
                        alert('error!');
                    }
                });
                layer.close(index);
            },
                function (index) {
                    layer.msg('取消Cancel');
                    ectable.reload();
                }

            );
        });


        table.on('tool(equipmenttypetable)', function (obj) {
            console.log(obj);
            var event = obj.event, //当前单元格事件属性值
                selectdata = obj.data;
            if (event === 'permission') {
                layer.open({
                    title: '更改访问权限/Edit access permissions'
                    , type: 2
                    , btn: ['确定Confirm', '取消Cancel']
                    , content: 'TypeRole?TYPEID=' + selectdata.ID
                    , area: ['40%', '85%']
                    , success: function (layero, index) {

                    }
                    , yes: function (index) {
                        var res = window["layui-layer-iframe" + index].callback();
                        console.log(res);
                        var jdata = JSON.parse(res);
                        console.log(jdata);
                        var roleids = jdata.roles.map(obj => obj.ID);
                        console.log(roleids);
                        $.ajax({
                            url: '../EquipmentType/SetTypeRoles',//控制器活动,返回一个分部视图,并且给分部视图传递数据.
                            data: {
                                TypeId: selectdata.ID,
                                RoleIds: roleids
                            },//传给服务器的数据(即后台AddUsers()方法的参数,参数类型要一致才可以)
                            type: 'POST',
                            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',//数据类型必须有
                            async: false,
                            success: function (data) {
                                layer.open({ content: data.message });

                            },
                            error: function (message) {
                                alert('error!');
                            }
                        });
                        layer.close(index);


                    }, btn2: function (index, layero) {
                        layer.msg('取消Cancel');
                    }

                });
            }
            else if (event === 'auditprocess') {
                layer.open({
                    title: '更改签核流程/Edit flow of audit'
                    , type: 2
                    , btn: ['确定Confirm', '取消Cancel']
                    , content: 'AuditProcessPage?TYPEID=' + selectdata.ID
                    , area: ['90%', '85%']
                    , success: function (layero, index) {

                    }
                    , yes: function (index) {
                        var res = window["layui-layer-iframe" + index].callback();
                        console.log(res);
                        var jdata = JSON.parse(res);
                        console.log(jdata);
                        var roleids = jdata.roles.map(obj => obj.value);
                        console.log(roleids);
                        $.ajax({
                            url: '../EquipmentType/SetFlowRoles',//控制器活动,返回一个分部视图,并且给分部视图传递数据.
                            data: {
                                TypeId: selectdata.ID,
                                RoleIds: roleids
                            },//传给服务器的数据(即后台AddUsers()方法的参数,参数类型要一致才可以)
                            type: 'POST',
                            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',//数据类型必须有
                            async: false,
                            success: function (data) {
                                layer.open({ content: data.message });
                            },
                            error: function (message) {
                                alert('error!');
                            }
                        });
                        layer.close(index);


                    }, btn2: function (index, layero) {
                        layer.msg('取消Cancel');
                    }

                });
            }
            else if (event === 'more') {
                dropdown.render({
                    elem: this, // 触发事件的 DOM 对象
                    show: true, // 外部事件触发即显示
                    data: [{
                        title: 'Select Golden Machine',
                        id: 'selectGoldenMachine'
                    }, {
                        title: '删除',
                        id: 'del'
                    }],
                    click: function (menudata) {
                        if (menudata.id === 'selectGoldenMachine') {
                            console.log(selectdata);
                            // layer.msg('查看操作，当前行 ID:' + selectdata.ID);
                            layer.open({
                                title: 'Select Golden Machine'
                                , type: 2
                                , btn: ['确定Confirm', '取消Cancel']
                                , content: 'SelectMachine?EQUIPMENT_TYPE_ID=' + selectdata.ID 
                                , area: ['40%', '85%']
                                , success: function (layero, index) {

                                }
                                , yes: function (index) {
                                    var res = window["layui-layer-iframe" + index].callback();
                                    console.log(res);
                                    var jdata = JSON.parse(res);
                                    console.log(jdata);
                                    var eqid = jdata.selectData[0].ID;

                                    $.ajax({
                                        url: '../EquipmentType/SetGoldenMachine',//控制器活动,返回一个分部视图,并且给分部视图传递数据.
                                        data: {
                                            EQID: eqid,
                                            EQUIPMENT_TYPE_ID: selectdata.ID
                                        },//传给服务器的数据(即后台AddUsers()方法的参数,参数类型要一致才可以)
                                        type: 'POST',
                                        contentType: 'application/x-www-form-urlencoded; charset=UTF-8',//数据类型必须有
                                        async: false,
                                        success: function (data) {
                                            layer.open({ content: data.message });
                                            window.rcptable.reload();
                                        },
                                        error: function (message) {
                                            alert('error!');
                                        }
                                    });
                                    layer.close(index);


                                }, btn2: function (index, layero) {
                                    layer.msg('取消操作.Cancel.');
                                }

                            });




                        } else if (menudata.id === 'del') {
                            layer.msg('未实现');
                        }
                    },
                    id: 'dropdown-table-tool',
                    align: 'right', // 右对齐弹出
                    style: 'box-shadow: 1px 1px 10px rgb(0 0 0 / 12%);' // 设置额外样式
                });

            }
        });
    });
</script>


