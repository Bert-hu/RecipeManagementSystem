
@{
    Layout = null;
    ViewBag.Title = "AddVersion";
}
<!DOCTYPE html>
<link href="~/Scripts/layui/css/layui.css" rel="stylesheet" />
<script src="~/Scripts/layui/layui.js"></script>
<script src="~/Scripts/layui/layui.table.formdate.js"></script>
<script src="~/Scripts/RMS/AddVersion.js?v=1.2"></script>


<fieldset class="layui-elem-field layui-field-title">
    <legend id="info"></legend>
</fieldset>
<div class="layui-tab layui-tab-brief" lay-filter="docDemoTabBrief" style="width: 80%;margin: 0 auto;margin-top: 20px">
    <ul class="layui-tab-title">
        <li class="layui-this">Version Info</li>
        <li>Approval Record</li>
        <li>Recipe Content</li>
    </ul>
    <div class="layui-tab-content" style="height: 100px;">
        <div class="layui-tab-item layui-show">
            <form class="layui-form  layui-form-pane" action="" lay-filter="versioninfo" id="versioninfo" style="display:none">


                <div class="layui-form-item">
                    <input type="text" name="ID" autocomplete="off" class="layui-input" style="display:none">
                    <div class="layui-inline">
                        <label class="layui-form-label">Version ID</label>
                        <div class="layui-input-block">
                            <input id='rcpversionID' type="text" name="NAME" autocomplete="off" class="layui-input" disabled>
                        </div>
                    </div>
                </div>



                <fieldset class="layui-elem-field layui-field-title">
                    <legend>Version Body</legend>
                </fieldset>


                <div class="layui-upload">
                    <div style="display: flex; align-items: center;">
                        <button type="button" class="layui-btn" id="loadbody">Load Recipe from Machine</button>
                        @*<button type="button" class="layui-btn" id="loadbodyfromeffectiveversion">Load Recipe from Effective Version</button>*@
                    </div>
                    <div class="layui-upload-list">
                        <img class="layui-upload" id="demo1">
                        <p id="demoText"></p>
                    </div>
                </div>
                <table class="layui-hide" id="filetable" lay-filter="filetable"></table>
                <fieldset class="layui-elem-field layui-field-title">
                    <legend>Update Remark</legend>
                </fieldset>

                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label">Remark</label>
                    <div class="layui-input-block">
                        <textarea placeholder="Update reason" class="layui-textarea" name="REMARK"></textarea>
                    </div>
                </div>

                <div class="layui-form-item">
                    <button type="button" class="layui-btn layui-btn-normal" id="saveform">Save</button>
                    <button type="submit" class="layui-btn" lay-submit="" lay-filter="sbm">Submit</button>
                </div>
            </form>
        </div>
        <div class="layui-tab-item">

            <table class="layui-hide" id="processrecordtable" lay-filter="processrecordtable"></table>

        </div>
        <div class="layui-tab-item">

            @*<textarea id="textarea_recipebody" class="layui-textarea" rows="20" readonly></textarea>*@
            <pre lay-encode="true" class="layui-code" id="textarea_recipebody"></pre>
            <table class="layui-hide" id="recipebody" lay-filter="tableEvent"></table>
        </div>

    </div>

</div>
<script type="text/html" id="filetoolbar">
    @*<a class="layui-btn layui-btn layui-btn-xs" lay-event="download">下载</a>*@
    <a class="layui-btn layui-btn layui-btn-xs" lay-event="delete">Delete</a>
</script>


@*<fieldset class="layui-elem-field layui-field-title">
        <legend>签核记录</legend>
    </fieldset>*@

<script>
    layui.use(['jquery', 'layer', 'table', 'form', 'upload', 'element', 'code'], function () {
        var $ = layui.jquery
            , layer = layui.layer
            , table = layui.table
            , form = layui.form
            ;
        //, upload = layui.upload
        //, element = layui.element;

        layui.code({
            encode: true //是否转义html标签。默认不开启
        });

        var vid = window.parent.data.id;
        var rcpname;
        var filetable;
        console.log(window.parent.versiontable)
        loadPage();
        function loadPage() {
            $.ajax({
                url: '../Recipe/GetVersionInfo',
                data: {
                    versionid: vid,
                },
                async: false,
                type: 'GET',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                success: function (data) {
                    //console.log(data);
                    rcpname = data.projectinfo.NAME;
                    var status = GetVersionStatus(data.versioninfo._FLOW_ROLES, data.versioninfo.CURRENT_FLOW_INDEX);
                    document.getElementById("info").innerHTML = 'Recipe: ' + data.projectinfo.NAME + " " + data.versioninfo.VERSION + ' ' + status;
                    var fff = document.getElementById("versioninfo");
                    fff.style.display = "block";
                    form.val('versioninfo', {
                        "ID": data.versioninfo.ID,
                        "NAME": data.versioninfo.NAME,
                        "REMARK": data.versioninfo.REMARK // "name": "value"

                    });

                    var $form = $('#versioninfo'); // 使用选择器替换 formId 为表单区域的 id
                    //状态>-1(-1为未提交状态)则锁定表单
                    if (data.versioninfo.CURRENT_FLOW_INDEX > -1) {
                        // 遍历表单区域中的每个元素
                        $form.find('input, textarea, select').each(function () {
                            // 设置 readonly 属性为 true
                            $(this).attr('readonly', true);
                        });

                    } else {

                        $form.find('input, textarea, select').each(function () {
                            $(this).attr('readonly', false);
                        });
                    }
                    // 重新渲染 layui 表单
                    layui.form.render();

                    //var uploadInst = upload.render({
                    //    elem: '#test1'
                    //    , accept: 'file'
                    //    , url: 'UploadRcpFromEQP' //此处用的是第三方的 http 请求演示，实际使用时改成您自己的上传接口即可。
                    //    , data: {
                    //        versionid: vid
                    //        //rcpname: data.projectinfo.NAME
                    //    }
                    //    , before: function (obj) {
                    //        //预读本地文件示例，不支持ie8
                    //        //obj.preview(function (index, file, result) {
                    //        //    $('#demo1').attr('src', result); //图片链接（base64）
                    //        //});

                    //        element.progress('demo', '0%'); //进度条复位
                    //        window.parent.layer.msg('上传中', { icon: 16, time: 0 });
                    //    }
                    //    , done: function (res) {
                    //        window.parent.layer.msg('<em style="color:white;font-style:normal;font-weight:normal">' + res.message + '</em>', { icon: res.result ? 1 : 4 });

                    //        $('#demoText').html(''); //置空上传失败的状态
                    //    }
                    //    , error: function () {
                    //        //演示失败状态，并实现重传
                    //        var demoText = $('#demoText');
                    //        demoText.html('<span style="color: #FF5722;">上传失败</span> <a class="layui-btn layui-btn-xs demo-reload">重试</a>');
                    //        demoText.find('.demo-reload').on('click', function () {
                    //            uploadInst.upload();
                    //        });
                    //    }
                    //    //进度条
                    //    , progress: function (n, elem, e) {
                    //        element.progress('demo', n + '%'); //可配合 layui 进度条元素使用
                    //        if (n == 100) {
                    //            //layer.msg('上传完毕', { icon: 1 });
                    //            filetable.reload();
                    //        }
                    //    }
                    //});

                    filetable = table.render({
                        elem: '#filetable'
                        , url: '../Recipe/GetFileTable'
                        //, toolbar: true
                        , id: "filetable"
                        , limit: 1000
                        , limits: [1000]
                        , height: '83'
                        , cols: [[
                            { field: 'NAME', title: 'Recipe Name' }
                            , { field: 'CREATOR', title: '上传者', width: 120 }
                            , { field: 'CREATE_TIME', title: '上传时间', templet: '<div>{{ FormDate(d.CREATE_TIME, "yyyy-MM-dd HH:mm:ss") }}</div>', width: 180 }
                            , { fixed: 'right', title: '操作', width: 200, align: 'center', toolbar: '#filetoolbar' }

                        ]]
                        , where: {
                            versionid: vid
                        }
                        , currentversionid: vid

                    });

                    //表中工具条
                    table.on('tool(filetable)', function (obj) { //注：tool 是工具条事件名，recipe 是 table 原始容器的属性 lay-filter="对应的值"
                        var selectdata = obj.data //获得当前行数据
                            , layEvent = obj.event; //获得 lay-event 对应的值
                        if (layEvent === 'download') {
                            //DownladFile(selectdata.ID);
                        } else if (layEvent === 'delete') {
                            if (confirm('确定删除？Confirm to delete')) {
                                //console.log(selectdata.ID)
                                DeleteFile(selectdata.ID);
                            }
                        }

                    });


                    function DownladFile(fileid) {
                        var url = "/Recipe/DownladFile?fileid=" + fileid;
                        window.open(url, "_blank");
                    }
                    function DeleteFile(fileid) {
                        $.ajax({
                            type: 'post',
                            dataType: 'json',
                            url: '../Recipe/DeleteFile',
                            data: {
                                fileid: fileid,
                            },
                            success: function (data) {

                                window.parent.layer.msg('<em style="color:black;font-style:normal;font-weight:normal">' + data.message + '</em>', { icon: data.result ? 1 : 4 });
                                filetable.reload();
                            },
                            error: function () {
                            }
                        });
                    }
                },

            });
            GetRecipeBodyContent();
            function GetRecipeBodyContent() {
                $.ajax({
                    url: '../Recipe/GetVersionSml',//控制器活动,返回一个分部视图,并且给分部视图传递数据.
                    data: {
                        RecipeVersionId: vid
                    },//传给服务器的数据(即后台AddUsers()方法的参数,参数类型要一致才可以)
                    type: 'POST',
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',//数据类型必须有
                    async: false,
                    success: function (data) {
                        if (data.Result) {
                            switch (data.RecipeType) {
                                case "GeneralNonSecs":
                                case "NonSecsGroup":
                                    var bodyObjArray = JSON.parse(data.BodySml);
                                    console.log(bodyObjArray)
                                    table.render({
                                        elem: '#recipebody'
                                        , height: 'full'
                                        , data: bodyObjArray
                                        //, url: '../RecipeVersion/GetRecipeBody/' //数据接口
                                        , title: 'Recipe Body'
                                        , page: true //开启分页
                                        // , toolbar: 'default' //开启工具栏，此处显示默认图标，可以自定义模板，详见文档
                                        // , totalRow: true //开启合计行
                                        , id: "recipebody"
                                        , limits: [20]
                                        , toolbar
                                        , limit: 20
                                        , defaultToolbar: ['filter']
                                        , cols: [[ //表头

                                            { field: 'Key', title: '参数', align: 'center' }
                                            , { field: 'Name', title: '名称', align: 'center' }
                                            , { field: 'Value', title: '参数值 ', align: 'center' }

                                            //, { field: 'Remark', title: '备注',  align: 'center' }
                                            //, { field: 'CheckTime', title: '检查时间', templet: '<div>{{ FormDate(d.CheckTime, "yyyy-MM-dd HH:mm:ss") }}</div>',align: 'center'}


                                        ]]

                                    });
                                    break;
                                default:
                                    var convertedText = data.BodySml.replace(/</g, '&lt;').replace(/>/g, '&gt;');

                                    document.getElementById("textarea_recipebody").innerHTML = convertedText;
                                    layui.code({
                                        //encode: true //是否转义html标签。默认不开启
                                    });
                                    break;

                            }


                        } else {
                            document.getElementById("textarea_recipebody").innerHTML = data.Message;
                        }


                    },
                    error: function (message) {
                        alert('error!');
                    }
                });
            }



            table.render({
                elem: '#processrecordtable'
                , url: '../Recipe/GetProcessRecord'
                //, toolbar: true
                , id: "processrecordtable"
                , limit: 1000
                , limits: [1000]
                , height: '500'
                , cols: [[
                    { field: 'FLOW_INDEX', title: '流程序号Flow No.' }
                    , {
                        field: 'ACTION', title: '结果',
                        templet: function (d, s) {
                            var strstate;
                            if (d.ACTION == 0) {
                                strstate = '提交Submit'
                            } else if (d.ACTION == 1) {
                                strstate = '同意Agree'
                            }
                            else {
                                strstate = '否决Reject'
                            }
                            return strstate;
                        }
                    }
                    , { field: 'REMARK', title: 'Remark' }
                    , { field: 'CREATOR', title: 'User', width: 120 }
                    , { field: 'CREATE_TIME', title: 'Date Time', templet: '<div>{{ FormDate(d.CREATE_TIME, "yyyy-MM-dd HH:mm:ss") }}</div>', width: 180 }


                ]]
                , where: {
                    versionid: vid
                }


            });

            //表单保存
            layui.$('#saveform').on('click', function () {
                var formdata = form.val('versioninfo');
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../Recipe/SaveForm',
                    data: formdata,
                    success: function (data) {
                        window.parent.layer.msg('<em style="color:black;font-style:normal;font-weight:normal">' + data.message + '</em>', { icon: data.result ? 1 : 4 });
                        var index = window.parent.layer.getFrameIndex(window.name)
                        window.parent.layer.close(index);
                        window.parent.versiontable.reload();

                    },
                    error: function () {
                    }
                });
            });


            //load recipe body
            layui.$('#loadbody').on('click', function () {

                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../Recipe/UploadRcpFromEQP',
                    data: {
                        versionid: vid,
                        rcpname: rcpname
                    },
                    success: function (data) {
                        console.log(data.res.Message)
                        var message = data.res.Message;
                        //console.log('testest')
                        //layer.msg('<em style="color:black;font-style:normal;font-weight:normal">' + data.message + '</em>', { icon: data.result ? 1 : 4 });
                        if (data.res.Result) {
                            layer.msg('Uploaded Successfully!')
                            filetable.reload();
                            GetRecipeBodyContent();
                            if (message.length > 0) {
                                layer.open({
                                    title: '不同参数'
                                    , type: 2
                                    , btn: ['确认', '取消']
                                    , content: 'recipeParams?data=' + encodeURIComponent(message)

                                    , area: ['80%', '90%']
                                    , success: function (layero, index) {
                                        //向layer页面传值，传值主要代码
                                        var body = layer.getChildFrame('body', index);

                                        //将弹窗页面中属性名id="xxxx"的标签赋值
                                        //var select = document.getElementById("eqp");
                                        //var options = select.options;
                                        //var index = select.selectedIndex;
                                        //body.find("[id='rcpid']").val(data.RecipeName);
                                        //body.find("[id='eqpid']").val(data.EQID);
                                        //body.find("[id='params']").val(data.Parameter);
                                    }
                                    , cancel: function () {

                                    }
                                    , yes: function (index) {
                                        layer.close(index);

                                    }, btn2: function (index, layero) {
                                        layer.msg('取消操作');
                                        layer.close(index);

                                    }

                                });
                            }

                    
                        } else {
                            filetable.reload();
                            layer.msg('<em style="color:white;font-style:normal;font-weight:normal">' + 'Error:' + data.res.Message + '</em>');
                        }
                    },
                    error: function (err) {
                        console.log(err)
                    }
                });
            });

            layui.$('#loadbodyfromeffectiveversion').on('click', function () {

                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '../Recipe/UploadRcpFromEffectiveVersion',
                    data: {
                        versionid: vid,
                        rcpname: rcpname
                    },
                    success: function (data) {
                        console.log(data)
                        //console.log('testest')
                        //layer.msg('<em style="color:black;font-style:normal;font-weight:normal">' + data.message + '</em>', { icon: data.result ? 1 : 4 });
                        if (data.res.Result) {
                            layer.msg('Uploaded Successfully!')
                            filetable.reload();
                        } else {
                            filetable.reload();
                            layer.msg('<em style="color:white;font-style:normal;font-weight:normal">' + 'Error:' + data.res.Message + '</em>');
                        }
                    },
                    error: function (err) {
                        console.log(err)
                    }
                });
            });
            //表单提交
            form.on('submit(versioninfo)', function (data) {

                if (confirm('确定提交？Confirm to submit?')) {
                    var formdata = form.val('versioninfo');
                    $.ajax({
                        type: 'post',
                        dataType: 'json',
                        url: '../Recipe/SubmitForm',
                        data: formdata,
                        success: function (data) {
                            console.log(data)
                            if (data.result) {
                                var index = window.parent.layer.getFrameIndex(window.name)
                                window.parent.layer.close(index);
                                //reload version table
                                window.parent.rcptable.reload({
                                    where: {
                                        EQID: window.parent.currenteqid
                                    }
                                });
                                window.parent.versiontable.reload();
                            } else {
                                window.parent.layer.msg('<em style="color:black;font-style:normal;font-weight:normal">' + data.message + '</em>', { icon: data.result ? 1 : 4 });
                            }

                            //close iframe

                        },
                        error: function () {
                        }
                    });
                }
                return false;
            });
        }


        function GetVersionStatus(flows, index) {
            var status = '';
            if (index == -1) {
                status = 'Unsubmitted';
            } else if (index == 100) {
                status = 'Completed';
            } else {
                status = 'Wait ' + flows[index];
            }
            return status;
        }

    });
</script>